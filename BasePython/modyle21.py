# Каждая запись второго словаря отображает, сколько и по какой цене закупалось товаров (цена указана за 1 шт.).
# Напишите программу, которая рассчитывает, на какую сумму лежит каждого товара на складе, и выводит эту информацию на экран.
# Результат работы программы.
# Лампа - 27 шт, стоимость 1134 руб
# Стол - 54 шт, стоимость 27860 руб
# Диван - 3 шт, стоимость 3550 руб
# Стул - 105 шт, стоимость 10311 руб
#
# goods = {
#     'Лампа': '12345',
#     'Стол': '23456',
#     'Диван': '34567',
#     'Стул': '45678',
# }
# store = {
#     '12345': [
#         {'quantity': 27, 'price': 42},
#     ],
#     '23456': [
#         {'quantity': 22, 'price': 510},
#         {'quantity': 32, 'price': 520},
#     ],
#     '34567': [
#         {'quantity': 2, 'price': 1200},
#         {'quantity': 1, 'price': 1150},
#     ],
#     '45678': [
#         {'quantity': 50, 'price': 100},
#         {'quantity': 12, 'price': 95},
#         {'quantity': 43, 'price': 97},
#     ],
# }
#
# for i_title, i_code in goods.items():
#     total_quantity = 0
#     total_cost = 0
#     for j_goods in store[i_code]:
#         total_quantity += j_goods['quantity']
#         total_cost += j_goods['price'] * j_goods['quantity']
#     print(f"{i_title} - {total_quantity} шт, стоимость {total_cost} руб")
# --------------------------------------------------------------------------------------------------------------------
# Ваня работает middle-разработчиком на Python в IT-компании. Один кандидат на junior-разработчика прислал ему код тестового задания.
# Задание состояло в следующем: есть словарь из трёх студентов. Необходимо:
#
# 1 Вывести на экран список пар «ID студента — возраст».
# 2 Написать функцию, которая принимает в качестве аргумента словарь и возвращает два значения:
# полный список интересов всех студентов и общую длину всех фамилий студентов.
# 3 Далее в основном коде эта функция вызывается, и значения присваиваются отдельным переменным,
# которые после выводятся на экран. (Т.е. нужно распаковать все возвращаемые значения в отдельные переменные.)
#
# students = {
#     1: {
#         'name': 'Bob',
#         'surname': 'Vazovski',
#         'age': 23,
#         'interests': ['biology', 'swimming']
#     },
#     2: {
#         'name': 'Rob',
#         'surname': 'Stepanov',
#         'age': 24,
#         'interests': ['math', 'computer games', 'running']
#     },
#     3: {
#         'name': 'Alexander',
#         'surname': 'Krug',
#         'age': 22,
#         'interests': ['languages', 'health food']
#     }
# }
# def list_students(dict):
#     interests_list = []
#     surname_string = ''
#     old_dict = {}
#     for id, student in dict.items():
#         interests_list += student['interests']
#         surname_string += student['surname']
#         old_dict[id] = student['age']
#     return old_dict, interests_list, len(surname_string)
#
# old_stud = list_students(students)[0]
# my_lst = list_students(students)[1]
# l = list_students(students)[2]
# print(old_stud)
# print(my_lst, l)
# ----------------------------------------------------------------------------------------------------------------------
#
# У вас есть словарь игроков, которые участвовали в трёх видах спорта. В словаре хранятся пары «Ф. И. — очки»:
#
# players = {
#     ("Ivan", "Volkin"): (10, 5, 13),
#     ("Bob", "Robbin"): (7, 5, 14),
#     ("Rob", "Bobbin"): (12, 8, 2)
# }
#
# Один программист попросил нас для своей базы отправить ему немного другой вариант хранения этой информации.
# Напишите программу, которая объединяет ключ словаря со значением в один кортеж, и выведите результат на экран.
# Постарайтесь использовать как можно более эффективное решение.
# Результат работы программы:
# [('Ivan', 'Volkin', 10, 5, 13), ('Bob', 'Robbin', 7, 5, 14), ('Rob', 'Bobbin', 12, 8, 2)]
#
# players = {
#     ("Ivan", "Volkin"): (10, 5, 13),
#     ("Bob", "Robbin"): (7, 5, 14),
#     ("Rob", "Bobbin"): (12, 8, 2)
# }
#
# list_players = [(key + value) for key, value in players.items()]
# print(list_players)
# ---------------------------------------------------------------------------------------------------------------------
#
# Даны строка и кортеж из чисел. Напишите программу, которая создаёт генератор из пар кортежей «символ — число».
# Затем выведите на экран сам генератор и кортежи.
# Пример:
# Строка: abcd
# Кортеж чисел: (10, 20, 30, 40)
# Результат:
# <generator object <genexpr> at 0x00000204A4234048>
# ('a', 10)
# ('b', 20)
# ('c', 30)
# ('d', 40)
# Дополнительно: создайте полный аналог функции zip, то есть сделайте так, чтобы программа работала с любыми итерируемыми типами данных.
def shortest_seq_range(string, tpl):
    return min(len(string), len(tpl))

syms_str = 'abc'
nums_tpl = (10, 20, 30, 40)

pairs = ((syms_str[i_elem], nums_tpl[i_elem])
         for i_elem in range(shortest_seq_range(syms_str, nums_tpl)))
print(pairs)
for i_elem in pairs:
    print(i_elem)